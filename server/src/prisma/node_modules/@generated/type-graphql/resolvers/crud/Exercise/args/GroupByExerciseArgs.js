"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByExerciseArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const ExerciseOrderByWithAggregationInput_1 = require("../../../inputs/ExerciseOrderByWithAggregationInput");
const ExerciseScalarWhereWithAggregatesInput_1 = require("../../../inputs/ExerciseScalarWhereWithAggregatesInput");
const ExerciseWhereInput_1 = require("../../../inputs/ExerciseWhereInput");
const ExerciseScalarFieldEnum_1 = require("../../../../enums/ExerciseScalarFieldEnum");
let GroupByExerciseArgs = class GroupByExerciseArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ExerciseWhereInput_1.ExerciseWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ExerciseWhereInput_1.ExerciseWhereInput)
], GroupByExerciseArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [ExerciseOrderByWithAggregationInput_1.ExerciseOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByExerciseArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [ExerciseScalarFieldEnum_1.ExerciseScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByExerciseArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ExerciseScalarWhereWithAggregatesInput_1.ExerciseScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ExerciseScalarWhereWithAggregatesInput_1.ExerciseScalarWhereWithAggregatesInput)
], GroupByExerciseArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByExerciseArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByExerciseArgs.prototype, "skip", void 0);
GroupByExerciseArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByExerciseArgs);
exports.GroupByExerciseArgs = GroupByExerciseArgs;
