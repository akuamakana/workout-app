"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByWorkoutArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const WorkoutOrderByWithAggregationInput_1 = require("../../../inputs/WorkoutOrderByWithAggregationInput");
const WorkoutScalarWhereWithAggregatesInput_1 = require("../../../inputs/WorkoutScalarWhereWithAggregatesInput");
const WorkoutWhereInput_1 = require("../../../inputs/WorkoutWhereInput");
const WorkoutScalarFieldEnum_1 = require("../../../../enums/WorkoutScalarFieldEnum");
let GroupByWorkoutArgs = class GroupByWorkoutArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => WorkoutWhereInput_1.WorkoutWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", WorkoutWhereInput_1.WorkoutWhereInput)
], GroupByWorkoutArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [WorkoutOrderByWithAggregationInput_1.WorkoutOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByWorkoutArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [WorkoutScalarFieldEnum_1.WorkoutScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByWorkoutArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => WorkoutScalarWhereWithAggregatesInput_1.WorkoutScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", WorkoutScalarWhereWithAggregatesInput_1.WorkoutScalarWhereWithAggregatesInput)
], GroupByWorkoutArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByWorkoutArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByWorkoutArgs.prototype, "skip", void 0);
GroupByWorkoutArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByWorkoutArgs);
exports.GroupByWorkoutArgs = GroupByWorkoutArgs;
