"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnumCategoryFilter = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const NestedEnumCategoryFilter_1 = require("../inputs/NestedEnumCategoryFilter");
const Category_1 = require("../../enums/Category");
let EnumCategoryFilter = class EnumCategoryFilter {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Category_1.Category, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", String)
], EnumCategoryFilter.prototype, "equals", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [Category_1.Category], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], EnumCategoryFilter.prototype, "in", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [Category_1.Category], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], EnumCategoryFilter.prototype, "notIn", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => NestedEnumCategoryFilter_1.NestedEnumCategoryFilter, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", NestedEnumCategoryFilter_1.NestedEnumCategoryFilter)
], EnumCategoryFilter.prototype, "not", void 0);
EnumCategoryFilter = (0, tslib_1.__decorate)([
    TypeGraphQL.InputType("EnumCategoryFilter", {
        isAbstract: true
    })
], EnumCategoryFilter);
exports.EnumCategoryFilter = EnumCategoryFilter;
