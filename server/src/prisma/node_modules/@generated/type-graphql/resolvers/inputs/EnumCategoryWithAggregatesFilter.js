"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnumCategoryWithAggregatesFilter = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const NestedEnumCategoryFilter_1 = require("../inputs/NestedEnumCategoryFilter");
const NestedEnumCategoryWithAggregatesFilter_1 = require("../inputs/NestedEnumCategoryWithAggregatesFilter");
const NestedIntFilter_1 = require("../inputs/NestedIntFilter");
const Category_1 = require("../../enums/Category");
let EnumCategoryWithAggregatesFilter = class EnumCategoryWithAggregatesFilter {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Category_1.Category, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", String)
], EnumCategoryWithAggregatesFilter.prototype, "equals", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [Category_1.Category], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], EnumCategoryWithAggregatesFilter.prototype, "in", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [Category_1.Category], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], EnumCategoryWithAggregatesFilter.prototype, "notIn", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => NestedEnumCategoryWithAggregatesFilter_1.NestedEnumCategoryWithAggregatesFilter, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", NestedEnumCategoryWithAggregatesFilter_1.NestedEnumCategoryWithAggregatesFilter)
], EnumCategoryWithAggregatesFilter.prototype, "not", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => NestedIntFilter_1.NestedIntFilter, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", NestedIntFilter_1.NestedIntFilter)
], EnumCategoryWithAggregatesFilter.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => NestedEnumCategoryFilter_1.NestedEnumCategoryFilter, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", NestedEnumCategoryFilter_1.NestedEnumCategoryFilter)
], EnumCategoryWithAggregatesFilter.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => NestedEnumCategoryFilter_1.NestedEnumCategoryFilter, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", NestedEnumCategoryFilter_1.NestedEnumCategoryFilter)
], EnumCategoryWithAggregatesFilter.prototype, "_max", void 0);
EnumCategoryWithAggregatesFilter = (0, tslib_1.__decorate)([
    TypeGraphQL.InputType("EnumCategoryWithAggregatesFilter", {
        isAbstract: true
    })
], EnumCategoryWithAggregatesFilter);
exports.EnumCategoryWithAggregatesFilter = EnumCategoryWithAggregatesFilter;
