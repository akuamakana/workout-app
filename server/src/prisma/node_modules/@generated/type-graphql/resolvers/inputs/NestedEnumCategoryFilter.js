"use strict";
var NestedEnumCategoryFilter_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.NestedEnumCategoryFilter = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const Category_1 = require("../../enums/Category");
let NestedEnumCategoryFilter = NestedEnumCategoryFilter_1 = class NestedEnumCategoryFilter {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Category_1.Category, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", String)
], NestedEnumCategoryFilter.prototype, "equals", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [Category_1.Category], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], NestedEnumCategoryFilter.prototype, "in", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [Category_1.Category], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], NestedEnumCategoryFilter.prototype, "notIn", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => NestedEnumCategoryFilter_1, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", NestedEnumCategoryFilter)
], NestedEnumCategoryFilter.prototype, "not", void 0);
NestedEnumCategoryFilter = NestedEnumCategoryFilter_1 = (0, tslib_1.__decorate)([
    TypeGraphQL.InputType("NestedEnumCategoryFilter", {
        isAbstract: true
    })
], NestedEnumCategoryFilter);
exports.NestedEnumCategoryFilter = NestedEnumCategoryFilter;
