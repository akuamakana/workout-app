"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExerciseGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const ExerciseAvgAggregate_1 = require("../outputs/ExerciseAvgAggregate");
const ExerciseCountAggregate_1 = require("../outputs/ExerciseCountAggregate");
const ExerciseMaxAggregate_1 = require("../outputs/ExerciseMaxAggregate");
const ExerciseMinAggregate_1 = require("../outputs/ExerciseMinAggregate");
const ExerciseSumAggregate_1 = require("../outputs/ExerciseSumAggregate");
const BodyPart_1 = require("../../enums/BodyPart");
const Category_1 = require("../../enums/Category");
let ExerciseGroupBy = class ExerciseGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], ExerciseGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], ExerciseGroupBy.prototype, "name", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Category_1.Category, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], ExerciseGroupBy.prototype, "category", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => BodyPart_1.BodyPart, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], ExerciseGroupBy.prototype, "part", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], ExerciseGroupBy.prototype, "workoutId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ExerciseCountAggregate_1.ExerciseCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ExerciseCountAggregate_1.ExerciseCountAggregate)
], ExerciseGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ExerciseAvgAggregate_1.ExerciseAvgAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ExerciseAvgAggregate_1.ExerciseAvgAggregate)
], ExerciseGroupBy.prototype, "_avg", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ExerciseSumAggregate_1.ExerciseSumAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ExerciseSumAggregate_1.ExerciseSumAggregate)
], ExerciseGroupBy.prototype, "_sum", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ExerciseMinAggregate_1.ExerciseMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ExerciseMinAggregate_1.ExerciseMinAggregate)
], ExerciseGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ExerciseMaxAggregate_1.ExerciseMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ExerciseMaxAggregate_1.ExerciseMaxAggregate)
], ExerciseGroupBy.prototype, "_max", void 0);
ExerciseGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("ExerciseGroupBy", {
        isAbstract: true
    })
], ExerciseGroupBy);
exports.ExerciseGroupBy = ExerciseGroupBy;
